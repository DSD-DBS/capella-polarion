# Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: CC0-1.0

name: Build

on:
  pull_request:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  workflow_dispatch:

jobs:
  test:
    name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: ${{matrix.python_version}}
      - name: Run unit tests
        run: uv run coverage run
      - name: Report coverage
        if: always()
        run: uv run coverage report

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.10"
      - name: Run Pre-Commit
        run: uv run pre-commit run --all-files

  build:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.10"
      - name: Build packages
        run: uv build --no-sources
      - name: Verify packages
        run: uvx twine check dist/*
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          if-no-files-found: error

  pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build, test]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/capella-polarion
    permissions:
      id-token: write
    steps:
      - name: Download built wheel
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
