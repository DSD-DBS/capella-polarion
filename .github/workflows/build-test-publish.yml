# Copyright DB Netz AG and contributors
# SPDX-License-Identifier: CC0-1.0

name: Build

on:
  push:
    branches: ["*"]
    pull_request: [master]
    tags: ["v*.*.*"]

jobs:
  test:
    name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version:
          - "3.10"
          - "3.11"
        include:
          - os: windows-latest
            python_version: "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{matrix.python_version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python_version}}
      - name: Download GTK Runtime Installer (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          choco install wget -y
          wget https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2022-01-04/gtk3-runtime-3.24.31-2022-01-04-ts-win64.exe
      - name: Install GTK Runtime (Windows only)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          Start-Process -FilePath "gtk3-runtime-3.24.31-2022-01-04-ts-win64.exe" -ArgumentList "/SILENT /LOG=install.log" -Wait -NoNewWindow
          Get-Content "install.log"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{hashFiles('pyproject.toml')}}
          restore-keys: |
            ${{runner.os}}-pip-
            ${{runner.os}}-
      - name: Upgrade Pip
        run: |-
          python -m pip install -U pip
      - name: Add git PAT
        run: |-
          git config --global --add url."https://${{ secrets.PAT_GITHUB }}@github".insteadOf https://github
      - name: Install test dependencies
        run: |-
          python -m pip install '.[test]'
      - name: Run unit tests
        run: |-
          python -m pytest --cov-report=term --cov=capella2polarion --rootdir=.

#  publish:
#    name: Publish artifacts
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - uses: actions/checkout@v3
#      - name: Setup Python
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.11"
#      - name: Install dependencies
#        run: |-
#          python -m pip install -U pip
#          python -m pip install build twine
#      - name: Build packages
#        run: |-
#          python -m build
#      - name: Verify packages
#        run: |-
#          python -m twine check dist/*
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Artifacts
#          path: 'dist/*'
#      - name: Publish to PyPI (release only)
#        if: startsWith(github.ref, 'refs/tags/v')
#        run: python -m twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} --non-interactive dist/*
